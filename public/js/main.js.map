{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/post.ts","./src/app/app.module.ts","./src/app/post/post.component.ts","./src/app/post/post.component.html","./src/app/post.service.ts","./src/app/post-dialog/post-dialog.component.ts","./src/app/post-dialog/post-dialog.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Post } from './post';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  public posts: Post[];\n\n  constructor(\n    public dialog: MatDialog,\n    public postSevice: PostService //post service injetado aqui, comunicação api\n    ){}\n\n    ngOnInit(){\n      this.posts = this.postSevice.posts;\n    }\n\n  openDialog(){\n    const dialogRef = this.dialog.open(PostDialogComponent,{\n      width: '600px',\n    });\n    dialogRef.afterClosed().subscribe(      \n      (result) => {\n        if(result){\n          this.postSevice.salvar(result.post, result.arquivo)\n\n        }\n      }\n      \n      );\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <span>Laravel Api com Angular</span>\n</mat-toolbar>\n\n<mat-divider></mat-divider>\n\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around none\" > \n  <app-post *ngFor=\"let p of posts\" [postagens]=\"p\"></app-post>  \n</div>\n\n<button mat-fab color=\"primary\" class=\"float-button\" (click)=\"openDialog()\">\n  <mat-icon>add</mat-icon>\n</button>\n\n\n","export class Post{    \r\n    constructor(\r\n        public nome: string,\r\n        public titulo: string,\r\n        public subtitulo: string,\r\n        public email: string,\r\n        public mensagem: string,\r\n        public arquivo?: string,\r\n        public id?: number,\r\n        public likes?: number,\r\n    ){}\r\n}\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule,\n\n  ],\n  providers: [\n    PostService\n  ],\n\n  entryComponents:[PostDialogComponent],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Post } from '../post';\nimport { PostService } from '../post.service';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\n\nexport class PostComponent implements OnInit {\n\n  @Input('postagens') post: Post;\n  constructor(\n    private postService: PostService\n  ) {}\n  ngOnInit() {\n  }\n\n  like(){\n    this.postService.like(this.post.id);\n  }\n\n  apagar(){\n    this.postService.apagar(this.post.id);\n\n  }\n\n}\n","<mat-card fxFlex class=\"card\">\n  <mat-card-header>\n    <div mat-card-avatar></div>\n    <mat-card-title>{{post.titulo}}</mat-card-title>\n    <mat-card-subtitle>{{post.subtitulo}}</mat-card-subtitle>\n  </mat-card-header>\n  <img mat-card-image src=\"/storage/{{post.arquivo}}\" alt=\"Site\">\n  <mat-card-content>\n    <p>\n      {{post.mensagem}}\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button color=\"primary\" (click)=\"like()\">LIKE</button>\n    <button mat-button color=\"warn\" (click)=\"apagar()\">Apagar</button>\n    <mat-icon color=\"secondary\" *ngIf=\"post.likes>0\" [matBadge]=\"post.likes\" \n      matBadgePosition=\"above after\" matBadgeColor=\"secondary\"\n      matBadgeOverlap=\"false\">favorite</mat-icon>\n  </mat-card-actions>\n</mat-card>\n  \n","import { HttpClient, HttpEvent, HttpEventType } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Post } from './post';\n\n@Injectable({\n  providedIn: 'root'// esta injetado direto no servise do appmodule\n})\nexport class PostService {\n\n  public posts: Post[] = [ ];\n\n  //parte de serviços para acesso a api laravel, importante criar um serviço para cada modulo\n\n  constructor(private http: HttpClient) { \n    this.http.get(\"/api\").subscribe(\n      (posts: any[])=>{\n        for(let p of posts){\n          this.posts.push(\n            new Post(\n              p.nome, p.titulo, p.subtitulo, p.email, p.mensagem, p.arquivo, p.id, p.likes\n              )\n          )\n        }\n      }\n    )\n  }\n  salvar(post: Post, file: File){\n    const uploadData = new FormData();\n    uploadData.append('nome',post.nome); //local da api, local do front\n    uploadData.append('titulo',post.titulo); //local da api, local do front\n    uploadData.append('subtitulo',post.subtitulo); //local da api, local do front\n    uploadData.append('email',post.email); //local da api, local do front\n    uploadData.append('mensagem',post.mensagem); //local da api, local do front\n    uploadData.append('arquivo',file, file.name); //local da api, local do front\n\n    this.http.post(\"/api\", uploadData, { reportProgress:true, observe: 'events' })\n    .subscribe((event: any)=>{\n      if(event.type == HttpEventType.Response){\n       // console.log(event);\n       let p: any = event.body;\n       this.posts.push(\n        new Post(\n          p.nome, p.titulo, p.subtitulo, p.email, p.mensagem, p.arquivo, p.id, p.likes\n          )\n        );\n      }\n      if (event.type == HttpEventType.UploadProgress){\n        console.log('UploadProgress');\n        console.log(event);\n      }\n    })\n  }\n\n  like(id: number){\n    this.http.get('/api/like/'+id).subscribe(\n      (event: any)=>{\n        //console.log(event);\n        let p =  this.posts.find((p)=> p.id == id );\n        p.likes = event.likes;\n\n      }\n    )\n  }\n\n  apagar(id: number){\n    this.http.delete(\"/api/\"+id).subscribe(event =>{\n     // console.log(event);\n     let i =  this.posts.findIndex((p)=> p.id == id );\n     if(i >=0 )\n     this.posts.splice(i,1);\n\n    })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n\n  public nomearquivo: string = '';\n\n  public dados = {\n    post: new Post(\"\",\"\",\"\",\"\",\"\",\"\",),\n    arquivo: null\n  }\n\n  constructor(\n    public dialogref: MatDialogRef<PostDialogComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  mudouarquivo(event){\n   // console.log(event.target.files[0]);\n    this.nomearquivo = event.target.files[0].name;\n    this.dados.arquivo = event.target.files[0];\n\n  }\n\n  salvar(){\n    this.dialogref.close(this.dados);\n  }\n\n  cancelar(){\n    this.dialogref.close(null);\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Nome\" [(ngModel)]=\"dados.post.nome\">\n            <mat-hint>Digite seu nome</mat-hint>\n        </mat-form-field>\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Email\" [(ngModel)]=\"dados.post.email\">\n            <mat-hint>Digite seu Email</mat-hint>\n        </mat-form-field>\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\" >\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Titulo da mensagem\" [(ngModel)]=\"dados.post.titulo\">\n            <mat-hint>Digite o Titulo</mat-hint>\n        </mat-form-field>\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Subtitulo da Mensagem\" [(ngModel)]=\"dados.post.subtitulo\">\n            <mat-hint>Digite um subtitulo para Mensagem</mat-hint>\n        </mat-form-field>\n    </div>\n    <mat-form-field>\n        <textarea matInput placeholder=\"Deixe sua mensagem\" [(ngModel)]=\"dados.post.mensagem\"></textarea>\n    </mat-form-field>\n</div>\n<input type=\"file\" style=\"display:none\" (change)=\"mudouarquivo($event)\"  #fileinput>\n<button mat-stroked-button color=\"primary\" (click)=\"fileinput.click()\">\n    <mat-icon>add_a_photo</mat-icon>\n    Adicionar foto\n</button>\n<p *ngIf=\"nomearquivo!=''\">\n    <strong>Arquivo: </strong>{{nomearquivo}}\n    <mat-icon color=\"primary\">done</mat-icon>\n</p>\n\n<br><br>\n\n<div style=\"text-align: center;\">\n    <button mat-button color=\"primary\" (click)=\"salvar()\">OK</button>\n    <button mat-button color=\"warn\" (click)=\"cancelar()\">Cancelar</button>\n</div>\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}